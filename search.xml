<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[1901050017-自学训练营学习4群-PYTHON入门]]></title>
    <url>%2FPython%E5%85%A5%E9%97%A8%2F1901050017-%E8%87%AA%E5%AD%A6%E8%AE%AD%E7%BB%83%E8%90%A5%E5%AD%A6%E4%B9%A04%E7%BE%A4-PYTHON%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[学员信息 姓名：王晓镜 学号：1901050017 学习内容：14天python入门营 学习用时：40小时 学习笔记我选择的是预约制学习，可以自己学完一次作业以后马上申请学习后面的作业。 训练营带给我的 训练营的每日作业都会迫使我主动思考，逼迫我一字一句去阅读要求，不按照要求做就会完不成作业，强制改正了我阅读不仔细的问题。 社群式学习。不是单打独斗地面对困难，‘恐惧未知’这条恶龙不会在大脑中盘旋很久，因为有教练和同学在帮助着我，即使偶尔会深陷泥沼，只要我呼喊，他们就会立刻施于援手。学习效率大大提高。 养成了阅读官方档案的习惯。这一点非常重要，每天的作业都会给出官方档案的链接，在群里大家也会互相提醒，随时巩固这个好习惯。 学会了程序员思考，遇到难点，学会把它分成一小段一小段来解决，并且用自己熟知的知识尝试类比来解释给自己听。 深刻地认识到了借鉴优秀程序员的智慧结晶是非常重要的，有质量的输出的前提是要有质量地输入，如果能看懂优质代码，并为己用，这本身就是一种进步。 千里之行，始于足下—-训练营第一天 day1-day2作业完成自学训练营最能反映学习中不好的习惯。 收到“自学任务清单”，开始学习。清单表达的很清楚，但真的就是我看不见它，它一直在那里。清单里要求先看参考资料，我愣是自动掠过这一步，现在想来，真的是很佩服我的大脑，就这样习惯性地怕麻烦，找捷径，试图略过一切，然后还妄想能快速完成作业。 我在卡壳以后，冷静了下来，重新从清单1开始看，耐心地看了参考资料，认真地对待每一句话，这样竟然神奇地解决了每一个问题。这次我认识到想要解决问题，还是得克服自己的毛病。在做作业时，踏踏实实。 因为习惯不好，没有阅读官方文件。在一个小到不能再小的步骤上卡壳了1个小时。 在查看社群其他人的聊天中，找到了解决方案，在第一天截止时间前完成了第一天的打卡。 好久没体会过沉浸的感觉了，就是那种猛一抬头，一个小时过去了。 第一天的学习让我认识到想要解决问题，还是得克服自己的毛病。在做作业时，要踏踏实实。 纸上得来终觉浅，绝知此事须躬行—-训练营第二天 day3-day5作业完成看到群里的同学都在陆续地交作业（社群学习的好处，时刻督促自己），我停掉了“自我攻击的剧情”，心里开始接受一件事，那就是遇到不会的问题时是正常的，不久的将来一定会熟练掌握的。于是，心理突破了，脑子和手并用，完成作业的速度就提上来了。再加上，我不再以借鉴代码为耻，目的就是为了学习，我再借鉴的基础上再加上自己的理解，现在已经能够写出代码的一大部分了。自主学习加同学间互助式学习，具像化了李笑来老师说的： 很多人有莫名其妙的误解，以为“自学”（self-learning)就一定是“自己独自学”（solo-learning)，殊不知，自学也需要社交。 别怕！ 啥也别怕！没什么可怕的！ 收获总结： 学会了抄代码。不再谴责自己没用，心安理得地抄了三种代码，然后运行，改写代码，最后改写出了自己的代码。 敢于调试，以前总是怕出现问题，手心冒汗，后背冒汗，脑袋发麻，如今出现问题我就搜索问题是什么意思，然后冷静地去想办法解决。 学会去github里的issues找问题答案。 读书破万卷，下笔如有神—-训练营第三天 day6作业完成收获总结： 行之有效的方法就是大量阅读官方资料，因为是社群学习+github分布式交作业，所以可以看到很多同学的代码。学习+模仿，是我在3天时间内完成day1-6的任务的秘诀。输入有质量才是最好的进步方式。 读书不觉已春深，一寸光阴一寸金—-训练营第四天 day7-day10作业完成写python代码，做有用之事。在第四天，完成到了训练营day10的任务。 收获总结： 因为这几天的学习，让我深刻体会到了废寝忘食、孜孜不倦、目不转睛、聚精会神、茶饭不思的境界，心流时间可以达到3、4个小时不间断。 对阅读更是有了新的体会：一字不落的读，来回反复地读，不躲避，不放弃，迎着困难读。 对官方文档更加看重，对google也更加依赖，李笑来老师说的好： 学习任何东西，首先看官方文档或产品说明书，那些学习高手都是会先阅读官方文档的人。 能google出答案的问题，就不需要去麻烦别人.google、stackoverflow、wikipedia、youtube这都是自学人经常要去搜索的好地方。 千里之行，始于足下—-训练营第五天 day11-day12作业完成 眼是懒汉，手是好汉不怕，一点也不可怕，不难，一点也不难。 在这天，我清楚地感受到今天不想做作业地心情，抵触、逃避、恐慌、焦虑。。。。。。因为预知了困难，提前看GitHub 上的issues里都是关于day11作业的困惑和疑问，心里多少有些抵触。但是我知道只有做了才能解决，而不是空想。逃避没有任何用，把任务分解，一句话一句话地去实施。 随着着手敲代码的开始，这一天没有想象中困难，最后完成了day11-12的任务。 收获总结： 深刻理解了，写代码如同搭积木，一个函数如同一块乐高积木，只要一块一块加上去，就具像化了自己的目标。 一直听说python爬虫技术，今天终于得以实施，抓去了张小龙的演讲稿并做了处理，返回了邮件。 一直听说微信机器人，今天又亲自实施，和微信好友互动有无，她给我文章，我给她文章的数据，是自动的哦。 这次我好像真的很可以确信，学python不会再半途而废了，也许日后如同excel一样，用的机会越来越多了。 咬定青山不放松—-训练营第六天 day13作业未完成距离上一次提交作业已经过了两天，因为这次遇到了问题。求助issues和助教，还是未能解决。matplot绘制图表在我的电脑中显示不出来。无解中。 敏而好学，不耻下问—-训练营第7天 day13-14作业完成在google和其他同学的作业中寻找到答案，遇到两个大问题最终解决。1、matplot绘制图表在我的电脑中显示不出来。刚开始我以为代码没写对，后来用官方文档里的作业依然显示不出来。我才想到可能是其他问题，因为不自信，所以才会在代码上改了又改，耽误了时间，而真正问题不能解决。这是因为matplotlib的backend设置成了agg格式得在整个代码前加上 12import matplotlibmatplotlib.use（’TkAgg’) 而且要注意要在import matplotlib.pyplot前使用。2、微信返回数据乱码a.去fontplace下载SimHei字体，其他也可以。但网页打不开，我就选择了科学的方法，一次ok。b.把这个ttf文件手动添加到matplotlib的mpl_data里的tff文件夹里，这里都是已装字体。c.找到matplotlibrc文件，打开，这是不要害怕，直接找到font.sans-serif，在冒号后面打出：SimHei。关闭文件。在代码里添加 12from pylab import mplmpl.rcParams[‘font.sans-serif’] = [‘SimHei’] 事情到此，我的代码已经完全能显示了，并且中文也出来了。而且最重要的是通过此次的问题解决，让我对这次的作业代码非常熟悉，已经能变换地写出好几种相同功能的代码了。也算是有所收获。 最终的一天来到了，全部学完了训练营的任务，中间有困惑，有惊喜，最终收获的是满满的知识和弥足珍贵的自学体验，升级了自学的操作系统，对未来编程技能的使用充满了信心。]]></content>
      <categories>
        <category>Python入门</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>学习打卡</tag>
        <tag>自学营</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1901050017-自我介绍]]></title>
    <url>%2F%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D%2F1901050017-%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[基本信息姓名：王晓镜学号：1901050017 工作背景中学老师 自我介绍我叫王晓镜。 学习python是想活在未来，用代码来为自己工作，用程序员思维来思考，用数据分析来判断形势和做出选择。 目前python入门营已学完，MIT课程自学已完成，正准备进入python进阶营学习。 我选择进入python入门营学习是做过最正确的选择，我发现与其说是学习写代码，不如说是如何学习程序员式思考方式。在紧张、有条不紊地14天学习过后，我看到了python的库的丰富，对于数据的抓取和可视化都不复杂，稍加学习就能掌握基本的数据读写和作出图表。但我知道代码易抄，背后却需要自己的思考和扎实的知识基础。我分析了自己对数据分析的兴趣，是源于想从看似复杂难辨的原始数据中找出事实，以让人一目了然的方式展现出来，从而基于事实作出判断。无论我的工作上还是业余生活上都非常需要这个技能，工作上我作为教务处老师，整天和成绩打交道，这是原始数据，并不需要抓取，但目前为止，只能用Excel展现学生成绩，而老师的教学质量和学生的成绩都无法关联，我先用python帮助自己；在其他方面，我想抓取我感兴趣的金融、时事数据并作出分析，这也需要python来帮助我。自学是可以的，但我在入门营体会到了自学社交的魅力，所以在开设进阶数据营后，我就来报名了。希望能让自己梳理好关于数据分析的系统思维，掌握数据分析的技能，随着学习的深入，对于自己想要的应用也许能更加细分化。]]></content>
      <categories>
        <category>自我介绍</category>
      </categories>
      <tags>
        <tag>中学老师</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1901100009-自学是门手艺-第一部分的七个章节]]></title>
    <url>%2F%E8%87%AA%E5%AD%A6%E6%98%AF%E9%97%A8%E6%89%8B%E8%89%BA%2F1901100009-%E8%87%AA%E5%AD%A6%E6%98%AF%E9%97%A8%E6%89%8B%E8%89%BA-%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%E7%9A%84%E4%B8%83%E4%B8%AA%E7%AB%A0%E8%8A%82%2F</url>
    <content type="text"><![CDATA[学员信息 学号：1901100009 学习内容：《自学是门手艺》 学习用时：60min 学习笔记 刚刚完成14天自学营的学习。针对一些疑问也跟教练做了一些交流。了解到了学习Python早期就是要多看代码，多输入才能多输出。自学营毕业了算是入门了，后面几天继续阅读《自学是门手艺》以了解整本书的框架。 今天阅读了《自学是门手艺》的第一部分的七个章节。相比其他的计算机教程书，笑来老师的这本书阅读起来更加友好一些。了解了Python的一些最基本的知识。同时对自学营早期的一些作业内容，通过阅读书籍也多了一层理解。 很快理解函数从另外一个角度看只不过是 “程序员作为用户所使用的产品”。]]></content>
      <categories>
        <category>自学是门手艺</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>学习打卡</tag>
        <tag>自学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1901010056-自学训练营学习1群-Python入门]]></title>
    <url>%2FPython%E5%85%A5%E9%97%A8%2F1901010056-%E8%87%AA%E5%AD%A6%E8%AE%AD%E7%BB%83%E8%90%A5%E5%AD%A6%E4%B9%A01%E7%BE%A4-Python%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[学员信息 姓名：马林同学 学号：1901010056 学习内容：Python 14 天入门 学习用时：总用时110.2小时 学习笔记day1~day14的记录day1学习时长:7个小时 学习内容 创建了两个自己的代码仓库，学会使用branch 和pull requst 在Github的仓库提交issue 通过Github Desktop 将ma-hellow-world 仓库克隆到了本地电脑 将公共作业的仓库克隆到了本地电脑，在本地仓库的exercises目录下藏剑文件 通过Github桌面客户端将本第电脑的变更推送到自己的账户下的作业仓库 向远程作业仓库的master分支发起了pull request 收获 pull request are zhe heart of the collaboration shows diffs or differences of the content from both branch make adn commit changes 和open a pull request for changes to the develop和merge your pull request 在三个步骤在初期的时候搞不明白 认识了不少单词和句子 在找按钮的过程中，经常忽略下拉找找 对于一些难词很多的生词，可以直接字典翻译，提高效率 day2学习时长:7个小时 收获 锻炼自己，通过找、 问的方式去解决问题。 顺利下载并安装了Anaconda，并在其界面安装了VScode，Jupyter Notebook 和 JupyterLab. 在 vscode 中配置 Python 环境选择特定环境，应该输入“Python: Select Interpreter”进行选择。但一直没有对应的选项。通过糖总发总的issue链接找到答案。要搜索“language”——“Configure Display Language”——将”locale”:”en”修改为”locale”:”en-US”，保存。重启。 用jupiter note book 阅读笑来老师新书，被网页上的一个烟雾弹，所困住。经过助教点播，才解决，发现也不是大问题。 day3学习时长:4个小时 收获 在自己的编码器上跑出程序 由于认真看过笑来老师的新书，再结合google翻译，看起来英文文档还比较顺畅，但是一下子也没好好吸收 感悟 实际的操作代码很多都是可以从网上找到的。这对于初步阶段的我很有利用价值。 用好google和google 翻译，似乎没有什么事是解决不了的 day4学习时长:6个小时 遇到问题 当拿到题时，没有任何头绪。知道会用到条件判断和循环语句，但是不知道怎么用。最后在issue上解决了问题 在写代码时忘了加冒号，导致运行失败 在写while语句时，发现空格也非常重要，否则，程序是没办法成功的 感悟 细心也非常重要 把学的内容解释，可以在代码中加井号，解释出来，加深理解 day5学习时长:9.5个小时 学习内容 字符串的基本处理，将文本里的单词进行替换，剔除不想要的单词，翻转单词中的大小写字母 用字典统计字符串样本中英文单词出现的次数，按照出现次数从大到小进行排列，注意排除符号 将数组顺序进行翻转，用字符符串切片方式取出第三到第八个字符，将获得的字符进行翻转，将结果转化成整型，分别转化成二进制，八进制，十六进制 学习笑来老师书上的内容，知道了笑来老师书的代码是可以直接在lab上直接运行的操作，并且可以改着玩 将单词中包含ea的单词除去的时候，一开始参考用del但是后面的怎么跑都不成功。后来又参考另外几名同学的作业，和issue，才知道del 的用途一般用来删除数组中的一个元素，或者删除一个变量 感悟 day5的实用性很强，有四六级或者考研的所有的卷子text,就可以对里面所有的单词出现的频率进行统计，从而把时间都花在记忆高频率不会的单词上，只是最后转化成二进制，八进制，十六进制，暂时还不知道有什么用 在打代码的时候，需要注意冒号是否打了 可以把笑来老师的书提上日程上来，对于增加对python有很大帮助，上面的代码可以直接修改，对于无论是函数，数据类型，还是其中的逻辑关系的理解都又很大的帮助 程序跑错误后的提示，也至关重要，提示里的单词一定要明白意思 似乎是上点门道了。结合笑来老师的书，提供了很多的方便 day6学习时长:5个小时 学习内容 封装统计英文单词词频的函数。这个任务是基于昨天 的内容 封装统计中文汉字字频的函数，判断是不是汉字这个问题需要一定的时间 感悟 虽然作业时做下来了，但是作业里面还是有很多东西一知半解，无论是函数的运用，还是字符的形式，等等一系列内容都是需要加强训练的，都是需要时间和精力的投入才能慢慢上手的 已经完成的同学的作业也是有好有坏，有的非常的简洁，有的非常的繁琐，再参考的时候一定要多看几个，比较一下 day5的Python中的禅宗中的这句话”面对困惑，拒绝猜测的诱惑”给自己提了个醒，不要懒的查找就去猜测函数的功能或者不会的内容 day7学习时长:10.5个小时 感悟 冥想对于编程来说有很大的帮助，因为无论是调试一个程序，还是阅读一段自己理解的概念，都能够让自己很清楚很客观认识自己的现状，自己的处境，自己正在挣扎在一个怎样的问题上。缺乏元认知能力的话，很容易陷入低级的困惑当中，甚至即使过了很长时间自己的对问题的思考都得不到推进。 做题的时候，可以把笔记本就打开，遇到不会的问题，就敲到上面，遇到自己不熟悉的知识点就敲到上面。因为不会的都是需要自己加强的，所以敲一遍一点都不过分，甚至多敲几遍都不过分 在把笑来老师的part1再看一遍，发现这一部分需要多看几遍，不然不容易掌握，多看一遍对全局都有一个更深刻的理解 把对英文的词频和中文的字频包装成一个函数，需要的时候随时调用，这样真的剩了不少事 知识点总结 循环语句可能带有一个else子句；这个else子句它会在循环遍历完列表的时候被执行（另一种情况暂时没遇到先不讨论），但是不会在循环被break语句终止时被执行。 break 它也属于一个子句中的一个条件，表示跳出最近的for循环，（while没遇到暂时不讨论），控制流程往下跑。但是一种情况比较特殊就是往下跑的时候遇到else语句，此时else语句不被执行 琢磨流程控制中的break和continue需要时间多点。continue语句看官方文档稍微好理解，就是当条件被满足时，也就是continue被执行时，流程被控制往上跑，继续上面的循环 易错点 在mydouble文件夹的同级目录下，创建main.py文件。意思就文件夹mydouble和文件main.py都出现在同一个页面中，容易犯的误区就是，看到，一个文件夹，一个文件，想当然地认为这个文件就在文件夹里。 day8学习时长:3.7个小时 学习收获 Ctrl +Backspace是删除整个单词 Ctrl+左右移动键是光标来回在整个单词间跳动 Tab +右移动键 可以自动补全函数和前面已经输入过的字符 感悟 尝试一下，通过写的方式将自己的思想过程具体化，避免失去重点，让任务得不到推进。 一切提升效率的东西都要尽快第掌握 day9学习时长:11.5个小时 卡点 不知道怎么把VS code给玩坏了，以前的所有作业的程序都运行不了，但是发现前已经花了好多时间在上面这是第一个卡点，卡了我不少时间，最后在折腾不行，听教练的建议又重新安装了一遍，随后才正常运转 关于tang300.json路径的设置，我一直担忧是自己的运行系统是C盘，但是作业在D盘的原因，在参考前辈的作业，什么情况都有，况且每个人的路径都不一样，苦苦挣扎，也卡了不少时间，最后在YouTube上的相关视频找到启发，让程序给运行成功了 在找问题的时候，由把本地文件的仓库的文件位置给变动了，所以就是在desktop上费了点时间 感悟 累坏了，不过在通过自己的努力查找，让程序运行成功的一瞬间，感觉自己的真牛，差点都认怂了，幸好没放弃，充足的时间预算也相当重要， day 10学习时长:11个小时 下载完jieba不知道怎样安装，在issue上虽然有个方法，但是在终端输入指令根本不会，在教练逯彬杨的帮助下，又查阅相关的资料解决 程序死活运行不了，以前的做的有的也运行不了，教练协助，修改了部分代码，还是不行，尝试了，各种办法以后（有一个尝试把操作页面改成中文了），为下一步发现问题铺一步路，尝试到11点，和辅导员老白的聊天中，他提了一句，配置问题，然后第二天发现有一个bug确实是配置问题，以前做的能运行了 找不到路径问题，由于前段时间，一不小心玩坏了本地，删除了以后，导致路径发现问题，后来又把程序中的路径改了过来 程序运行找不到mydoule中的stats_world，最后索性都在后面加了一个数字，最后终于成功 感悟 做的时候，不知道是以前的坑，还是现在的坑在等着你，让你去跳，要做多就是找出坑，把它填平，确保自己不会掉下去。 时间预算也是非常重要的考虑因素，如果时间预算不充裕的话，做这个难度还确实不小 主动性也是一个十分重要的因素，卡到一个部分，查完后还一脸懵逼，就问一下，教练十分敬业的帮助你，旁敲侧击地地提醒你，都会帮你把作业给往下推进。但是，前提是，你的主动性得强，关键在你自己。 day11学习时长:20个小时 卡点 安装文档解析库，折腾了一波 用requests请求公众号文章连接，获取返回结果response,把微信公众号的正文提取出来 开通邮箱这个权限后，输入的不是邮箱密码而是授权码，而且输入的位置是在终端 最后是在自己的邮箱先测试，反复第想 感悟 里面的步骤一步一步来，一步成功后，在继续下面的步骤，比如print出来，看这一步成功后再进行一步，避免问题堆积 想起一首歌词，“这一路上走走停停，顺着少年漂流的痕迹”，因为事比较多，所以自学这个也是挺艰难的，这几天都是，做做停停，不过只要不放弃，就有机会，如果放弃了，那这件事肯定凉凉。 辅导员和教练，助教的存在真的很重要，虽然培养的是自学能力，但是如果只靠自己而不去向前辈请教，我自己肯定做不到并且极其容易放弃，我想很多人肯定也做不到，所以有什么困惑，多和他们交流交流，收获绝对是很大的 day12学习时长:5.5个小时 卡点 安装wxpy,显示需要升级pip，根据提示输入指令后，又出现安装环境错误，直接把错误复制，在百度中搜索后，根据简书上的提示，进行改写，又出现错误。然后发现，在升级pip 的时候的命令少写一个数字，填上后，错误消失，在cmd 中查看晒否安装wxpy成功，成功后继续下一步 在终端测试得回来的数据不显示 自动接受的文章，把参考资料的延申都大致看完后，参考实例代码，运行琢磨，发现需要，把最后的embed（）函数也剪切过来，才能检验前几段程序，可是还是没解决问题，又在网上转一圈后，在何教练的点播下，又改了一行代码，解决 文本出现了，但是，词频没出现，经过琢磨后， 发现把stats_word11名字，改一下，解决 感悟 在卡点三花费时间最长，最后教练一句话解决，教练的重要性，不言自明 作业是作业，但是相关的衍生工作，都够自己的琢磨一整子的，就比如今天的wxpy: 用 Python 玩微信 也刚好在室友的帮助下，调试很多遍成功，相关实用性的训练有时需要求助的不止一个人 经过这段时间的思考，认为，自学的常态是，碰到问题，明确问题，想办法解决问题。其中最为关键的是想办法解决问题，相关论坛的，内网和外网，教练们，等等，想各种渠道去解决问题。 day13学习时长:3.5个小时 卡点 参考matplotlib的资料，将day12中的结果生成一张图片，将演示代码直接复制能出现一样的图片结果&gt;现在想办法在这个代码改改，把day12的结果想办法引进来 将返回给好友的内容以表的形式出现，参考作业代码不行，通过百度，直接把上面的结果转化成list形式，可以返回给好友 感悟 day13新增的部分更像是一个工具，一个将表格转换成图片的工具，将里面的东西稍微变变型就能弄出自己的东西 day14学习时长:6个小时 感悟 这一路走过来，像极了过关的游戏的感觉，你会遇到各种各样的卡点，不要怕，那是进步过关的入口 最后还是要感谢教练、辅导员、助教的帮助和鼓励，才让我有能力、有信心、有勇气去与困难做斗争，去把时间当朋友，披荆斩浪，勇往直前。]]></content>
      <categories>
        <category>Python入门</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>学习打卡</tag>
        <tag>自学营</tag>
        <tag>学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1901010056-自我介绍]]></title>
    <url>%2F%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D%2F1901010056-%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[基本信息姓名：马林学号：1901010056 工作背景大学狗 自我介绍我叫马林，一名普通二本农学专业的学生，对于 Python 的学习是零基础，学习Python的理由是树联寻英发布的《大数据人才报告》中的一项数据：目前我国大数据人才仅46万，在未来 3~5 年内大数据人才缺口达 15000000之巨。 我学习Python的目的目前是为了将来的工作加筹码，“独善其身”完了以后，希望可以“平天下”，哈哈说得有点大了，目前希望用途： 可以用在对Python领域工作岗位的分析上 对自己的两本时间记录数据的分析上 等等]]></content>
      <categories>
        <category>自我介绍</category>
      </categories>
      <tags>
        <tag>大学生</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1901050119-自学是门手艺(1.5.2)-Day18]]></title>
    <url>%2F%E8%87%AA%E5%AD%A6%E6%98%AF%E9%97%A8%E6%89%8B%E8%89%BA%2F1901050119-%E8%87%AA%E5%AD%A6%E6%98%AF%E9%97%A8%E6%89%8B%E8%89%BA-1-5-2-Day18%2F</url>
    <content type="text"><![CDATA[学员信息 学号：1901050119 学习内容：《自学是门手艺》- 1.5.2 值及其相应的运算 学习用时：1.5h 学习笔记收获总结先把书读厚再读薄，试着借用作者的视角，通过归纳、总结，复现每一部分内容的知识结构。最后，还要能再次把书读厚。如果能做到像作者那样去思考，那么，头脑中提炼出的知识结构就可以随时还原，就像根据目录检索正文一样。这样，一本书就彻底消化吸收了。 Daily Tips 这一章主要介绍了基础数据类型的运算细节。而除了基础数据类型，我们需要由它们组合起来的更多复杂数据类型。但无论数据的类型是什么，被操作符操作的总是该数据的值。 值是程序的基础成分（Building blocks） 常量的值就是它们字面所表达的值。变量必须先赋值才能使用，即，要先把一个值保存到变量中，它才能在其后被运算。 在 Python 中每个函数都有返回值，默认返回 None 既然有不同类型的数据，它们就分别对应着不同类型的值。通常相同类型的值才能相互运算。在不得不对不同类型的值进行运算之前，总是要事先做 Type Casting（类型转换）。 函数就相当于各种事先写好的子程序，给它传递一个值，它会对其进行运算，而后返回一个值（最起码返回一个 None）。 每个变量或者常量，除了它们的值之外，同时还相当于有一个对应的布尔值。]]></content>
      <categories>
        <category>自学是门手艺</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>学习打卡</tag>
        <tag>自学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1901050119-自我介绍]]></title>
    <url>%2F%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D%2F1901050119-%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[基本信息姓名：Galaxy学号：1901050119 工作背景全职妈妈+自由职业者 自我介绍先介绍一下我的个人经验基础。在填课前问卷的时候，我选的是学过一种语言，做过demo程序。其实，选这一项只是因为没有更贴切的选项。其实我学过好几种语言，只是没有一种达到精通的。 我很早就对编程感兴趣，然而，这个“早”只是相对的，事实上发现的有点晚，高考填志愿的时候我执拗地选择了物理专业，而后才发现新大陆……那又怎样，我是兴趣驱动型的，我要自学编程，我要考研转专业……所以，从本科开始学C语言，我就把学校发的清华那本教材翻来覆去学了很多遍，当时根本没想到可以多买几本书对照着看，直到后来参加工作用C语言写代码，也没想着添置新的参考书。不知道自己不知道的时候，真可怕！ 后来，我又执拗地按照自己的意愿行事，考了电路与系统专业的研究生，离计算机近了些，然后利用实习的机会，又自学C++，当然有“同事老师”可以咨询，学的应该还凑合，因为，当我应聘软件工程师的时候，如愿拿到两份外企的Offer，一个是北京的C++语言，一个是西安的C语言。后来，我去了西安的公司。大家做的不是从无到有的工作，只能算作模块化编程吧，在原有代码的基础上增添、修改功能，不需要自己搭建编程环境。所以，我那一本教材上的内容也够用了，因此也没长出新的本事，没有被迫学会整套技能。后来，也学了一些html、css、C#，但都比较肤浅，没有走得很远。究其原因，还是自己的操作系统太陈旧，而又不知道可以升级造成的。 那份工作持续了４年多，我辞职回家了，一边带孩子一边瞎折腾。直到《自学是门手艺》又让重新点燃了我的编程热情。这一次，不为给别人打工，就想掌握这门手艺，为己所用。]]></content>
      <categories>
        <category>自我介绍</category>
      </categories>
      <tags>
        <tag>全职妈妈</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1901010000-MIT-自学 MIT 原版书 第三章]]></title>
    <url>%2FMIT60001%2F1901010000-MIT-%E8%87%AA%E5%AD%A6-MIT-%E5%8E%9F%E7%89%88%E4%B9%A6-%E7%AC%AC%E4%B8%89%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[学员信息 学号：1901010000 学习内容：自学 MIT 原版书 第三章一些简单的数值程序/其他补充阅读材料 学习用时：60min 学习笔记 完成30天打卡后，首次来完成当周打卡任务。发现Python健脑最好别间隔太久，要不一回来看就又觉得有丢丢陌生 这章其实就还是在继续复习while循环和for循环的基本编写方式。喜欢书里的写法，每次讲解完程序就会写”有经验的程序员一般是这样做的”。里面有一个例子是程序会永远运行下去，因为循环体没有减少两个参数之前的差距。经验丰富的程序员经常会插入一些print语句，比如测试递减函数是否真的递减。 这也是优秀教练的教法，比如今天我看到蔡教练给姜翔发的google工程师的编写规范·。下面也也发给大家一起参考。 看到特别好玩的三个语录分享给大家一乐： 这个”电话”有太多缺点，没法当作真正的通信手段。这东西本身对我们没有价值。 ——西联公司1976年内部备忘录 我看全世界对计算机的需求量总共可能只有五台。 ——托马斯沃森，IBM董事长，1943年 没有任何理由能够证明，人人都想在家里拥有一台计算机。 ——肯奥尔森，DEC公司总裁和创始人，1977年]]></content>
      <categories>
        <category>MIT60001</category>
      </categories>
      <tags>
        <tag>MIT</tag>
        <tag>Python</tag>
        <tag>学习打卡</tag>
      </tags>
  </entry>
</search>
